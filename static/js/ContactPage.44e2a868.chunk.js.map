{"version":3,"file":"static/js/ContactPage.44e2a868.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.jsx","components/ContactForm/ContactForm.jsx","components/addContactModal/AddContactModal.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { ListItem, Typography, Divider } from '@mui/material/';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\n\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport PersonIcon from '@mui/icons-material/Person';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsSlice';\n\nconst ContactItem = ({ id, phone, name, email }) => {\n  // const dispatch = useDispatch();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <>\n      <ListItem\n        sx={{ '&:hover': { backgroundColor: 'lightgray' } }}\n        alignItems=\"flex-start\"\n        secondaryAction={\n          <IconButton\n            disabled={isLoading}\n            onClick={() => deleteContact(id)}\n            type=\"button\"\n            edge=\"end\"\n            aria-label=\"delete\"\n          >\n            <DeleteIcon />\n          </IconButton>\n        }\n      >\n        <ListItemAvatar>\n          <Avatar>\n            <PersonIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={name}\n          secondary={\n            <>\n              <Typography variant=\"caption\" display=\"block\">\n                {phone}\n              </Typography>\n              <Typography variant=\"caption\">{email}</Typography>\n            </>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// import { useRef } from \"react\";\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  // useGetContactsQuery,\n  useAddContactMutation,\n} from '../../redux/contacts/contactsSlice';\nimport { Box, styled, Button, TextField, Typography } from '@mui/material';\n\nconst phoneRegEx =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst StyledTextField = styled(TextField)({\n  marginBottom: 10,\n  display: 'block',\n});\n\nexport default function ContactForm() {\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const validationSchema = yup.object({\n    name: yup.string('Enter your name').required('Name is required'),\n    email: yup\n      .string('Enter your email')\n      .email('Enter a valid email')\n      .required('Email is required'),\n    phone: yup\n      .string()\n      .matches(phoneRegEx, 'Phone number is not valid')\n      .min(8, 'Phone number should be of minimum 8 characters length')\n      .required('Phone number is required'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      phone: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async (values, { resetForm }) => {\n      await addContact(values);\n      resetForm();\n    },\n  });\n\n  return (\n    <Box\n      component=\"form\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      width=\"400px\"\n      height=\"400px\"\n      bgcolor=\"white\"\n      Validate\n      autoComplete=\"off\"\n      onSubmit={formik.handleSubmit}\n    >\n      <Typography variant=\"h6\" marginBottom=\"20px\">\n        Create contact\n      </Typography>\n      <StyledTextField\n        required\n        autoFocus\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n        variant=\"outlined\"\n        value={formik.values.name}\n        onChange={formik.handleChange}\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n        // inputRef={nameInput}\n      />\n      <StyledTextField\n        required\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        variant=\"outlined\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n      <StyledTextField\n        required\n        id=\"phone\"\n        name=\"phone\"\n        label=\"Phone number\"\n        variant=\"outlined\"\n        value={formik.values.phone}\n        onChange={formik.handleChange}\n        error={formik.touched.phone && Boolean(formik.errors.phone)}\n        helperText={formik.touched.phone && formik.errors.phone}\n      />\n\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        sx={{ my: 2, color: 'white', display: 'block' }}\n        disabled={isLoading}\n      >\n        Add new contact\n      </Button>\n    </Box>\n  );\n}\n// const handleSubmit = async (event) => {\n//   event.preventDefault();\n//   const data = new FormData(event.currentTarget);\n//   const name = data.get(\"name\");\n//   const phone = data.get(\"number\");\n//   const email = data.get(\"email\");\n\n//   if (contacts.find((contact) => contact.name === name)) {\n//     alert(`${name} is already here`);\n//     return;\n//   }\n//   nameInput.current.value = \"\";\n//   numberInput.current.value = \"\";\n//   emailInput.current.value = \"\";\n//   const newContact = {\n//     name,\n//     phone,\n//     email,\n//   };\n\n//   await addContact(newContact);\n// };\n","import { Box, Modal, styled } from '@mui/material';\nimport ContactForm from 'components/ContactForm';\n\nconst StyledModal = styled(Modal)({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\nconst AddContactModal = ({ open, handleClose }) => {\n  return (\n    <div>\n      <StyledModal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box>\n          <ContactForm />\n        </Box>\n      </StyledModal>\n    </div>\n  );\n};\n\nexport default AddContactModal;\n","import { useSelector } from 'react-redux';\nimport { useMemo, useState } from 'react';\nimport { RotatingSquare } from 'react-loader-spinner';\nimport ContactItem from '../ContactItem';\nimport { useGetContactsQuery } from '../../redux/contacts/contactsSlice';\nimport { List, Box, Fab } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport AddContactModal from 'components/addContactModal/AddContactModal';\n\nfunction ContactList() {\n  const filterValue = useSelector(state => state.filter);\n  const { data: contacts, isLoading } = useGetContactsQuery();\n  const [open, setOpen] = useState(false);\n  const closeModal = () => setOpen(false);\n\n  const getFilteredContacts = useMemo(\n    () =>\n      contacts?.filter(\n        contact =>\n          contact.name\n            .toLowerCase()\n            .includes(filterValue.trim().toLowerCase()) ?? [],\n      ),\n    [contacts, filterValue],\n  );\n\n  return (\n    <Box>\n      <AddContactModal open={open} handleClose={closeModal} />\n      {isLoading && (\n        <Box\n          sx={{\n            position: 'absolute',\n            display: 'flex',\n          }}\n        >\n          <RotatingSquare\n            ariaLabel=\"rotating-square\"\n            visible={true}\n            color=\"grey\"\n          />\n        </Box>\n      )}\n      {contacts && (\n        <Box className=\"box\">\n          <Fab\n            onClick={() => setOpen(true)}\n            component=\"button\"\n            variant=\"extended\"\n            sx={{\n              position: 'fixed',\n              left: '42%',\n              bottom: '100px',\n            }}\n            color=\"primary\"\n            aria-label=\"add\"\n          >\n            <AddIcon sx={{ mr: 1 }} />\n            Add contact\n          </Fab>\n          <List sx={{ bgcolor: 'background.paper' }}>\n            {getFilteredContacts.map(({ phone, name, _id, email }) => (\n              <ContactItem\n                phone={phone}\n                name={name}\n                email={email}\n                key={_id}\n                id={_id}\n              />\n            ))}\n          </List>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nexport default ContactList;\n\n//  {/* {contacts && (\n//     <ul>\n//       {getFilteredContacts.map(({ number, name, id }) => (\n//         <ContactItem phone={number} name={name} key={id} id={id} />\n//       ))}{' '}\n//     </ul>\n//   )} */}\n// // </>\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/Filter/filterSlice';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter);\n\n  const onChangeFilter = event => {\n    const { value } = event.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        onChange={onChangeFilter}\n        id=\"standard-helperText\"\n        helperText=\"Find contact by name\"\n        variant=\"standard\"\n        value={filterValue}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      />\n    </Box>\n\n    // <div className={styles.form}>\n    //   <label className={styles.label}>\n    //     <span>Find contacts by name</span>\n    //     <input\n    //       className={styles.input}\n    //       onChange={onChangeFilter}\n    //       type=\"text\"\n    //       name=\"name\"\n    //       value={filterValue}\n    //       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    //       title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    //       required\n    //     />\n    //   </label>\n    // </div>\n  );\n}\n","import ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { Box } from '@mui/material';\n\nfunction ContactsPage() {\n  return (\n    <Box>\n      {/* <Modal></Modal> */}\n      {/* <ContactForm /> */}\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["id","phone","name","email","useDeleteContactMutation","deleteContact","isLoading","ListItem","sx","backgroundColor","alignItems","secondaryAction","IconButton","disabled","onClick","type","edge","Delete","ListItemAvatar","Avatar","Person","ListItemText","primary","secondary","Typography","variant","display","Divider","component","phoneRegEx","StyledTextField","styled","TextField","marginBottom","ContactForm","useAddContactMutation","addContact","validationSchema","yup","required","matches","min","formik","useFormik","initialValues","onSubmit","values","resetForm","Box","flexDirection","justifyContent","textAlign","width","height","bgcolor","Validate","autoComplete","handleSubmit","autoFocus","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","my","color","StyledModal","Modal","open","handleClose","onClose","filterValue","useSelector","state","filter","useGetContactsQuery","contacts","data","useState","setOpen","getFilteredContacts","useMemo","contact","toLowerCase","includes","trim","position","ariaLabel","visible","className","Fab","left","bottom","Add","mr","List","map","_id","Filter","dispatch","useDispatch","m","noValidate","event","target","changeFilter","pattern"],"sourceRoot":""}