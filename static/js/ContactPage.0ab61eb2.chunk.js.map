{"version":3,"file":"static/js/ContactPage.0ab61eb2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"btn\":\"ContactForm_btn__wll+u\",\"input\":\"ContactForm_input__Bl93P\"};","import React, { useState } from 'react';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from '../../redux/contacts/contactsSlice';\nimport styles from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [addContact, { isLoading }] = useAddContactMutation();\n  const { data: contacts } = useGetContactsQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameInput = event => {\n    const { value } = event.target;\n    setName(value);\n  };\n  const handleNumberInput = event => {\n    const { value } = event.target;\n    setNumber(value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already here`);\n      return;\n    }\n\n    const newContact = {\n      // id: nanoid(),\n      name,\n      number,\n    };\n\n    await addContact(newContact);\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <label className={styles.label}>\n          <span>Name</span>\n          <input\n            className={styles.input}\n            onChange={handleNameInput}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          <span>Number </span>\n          <input\n            className={styles.input}\n            onChange={handleNumberInput}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n\n        <button className={styles.btn} disabled={isLoading} type=\"submit\">\n          {' '}\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"listUnit\":\"ContactItem_listUnit__C8MeF\",\"span\":\"ContactItem_span__8yGo-\"};","import styles from './ContactItem.module.css';\n// import { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from '../../redux/contacts/contactsSlice';\n\nconst ContactItem = ({ id, phone, name }) => {\n  // const dispatch = useDispatch();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <li key={id} className={styles.listUnit}>\n      <span className={styles.span}>\n        {name}: {phone}\n      </span>\n      <button\n        disabled={isLoading}\n        onClick={() => deleteContact(id)}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport { RotatingSquare } from 'react-loader-spinner';\nimport ContactItem from '../ContactItem';\nimport { useGetContactsQuery } from '../../redux/contacts/contactsSlice';\n\nfunction ContactList() {\n  const filterValue = useSelector(state => state.filter);\n  const { data: contacts, isLoading } = useGetContactsQuery();\n\n  const getFilteredContacts = useMemo(\n    () =>\n      contacts?.filter(\n        contact =>\n          contact.name\n            .toLowerCase()\n            .includes(filterValue.trim().toLowerCase()) ?? [],\n      ),\n    [contacts, filterValue],\n  );\n\n  return (\n    <>\n      {isLoading && (\n        <RotatingSquare\n          ariaLabel=\"rotating-square\"\n          visible={true}\n          color=\"grey\"\n        />\n      )}\n      {contacts && (\n        <ul>\n          {getFilteredContacts.map(({ number, name, id }) => (\n            <ContactItem phone={number} name={name} key={id} id={id} />\n          ))}{' '}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport styles from '../ContactForm/ContactForm.module.css';\nimport { changeFilter } from '../../redux/Filter/filterSlice';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter);\n\n  const onChangeFilter = event => {\n    const { value } = event.target;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <div className={styles.form}>\n      <label className={styles.label}>\n        <span>Find contacts by name</span>\n        <input\n          className={styles.input}\n          onChange={onChangeFilter}\n          type=\"text\"\n          name=\"name\"\n          value={filterValue}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n    </div>\n  );\n}\n","// import { Modal } from 'components/Modal';\nimport React from 'react';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nfunction ContactsPage() {\n  return (\n    <div>\n      {/* <Modal></Modal> */}\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["ContactForm","useAddContactMutation","addContact","isLoading","contacts","useGetContactsQuery","data","useState","name","setName","number","setNumber","handleSubmit","event","preventDefault","find","contact","alert","newContact","onSubmit","className","styles","onChange","value","target","type","pattern","title","required","disabled","id","phone","useDeleteContactMutation","deleteContact","onClick","filterValue","useSelector","state","filter","getFilteredContacts","useMemo","toLowerCase","includes","trim","ariaLabel","visible","color","map","Filter","dispatch","useDispatch","changeFilter"],"sourceRoot":""}